@model DetailsAttackViewModel
@{
    ViewBag.Title = Texts.Attack_Details_Title;
}

<div class="ui middle aligned center aligned grid">
    <div class="ui twelve wide left aligned column stacked segment">
        <div class="ui secondary pointing menu">
            <div class="header item">@Model.Item.GetLocalizedName() &mdash; @ViewBag.Title</div>
            @if (User.Identity.IsAuthenticated) {
                <div class="right menu">
                    <a href="@Url.Action("Edit", new { id = Model.Item.Id })" class="item"><i class="edit icon"></i> @Texts.Attack_Details_Edit</a>
                    <a href="@Url.Action("Delete", new { id = Model.Item.Id })" class="item"><i class="trash icon"></i> @Texts.Attack_Details_Delete</a>
                </div>
            }
        </div>
        <div class="ui form">
            <div class="four fields">
                <div class="field">
                    <label for="@Html.IdFor(m => m.Item.Id)">#</label>
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.Id, new { @readonly = true })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Item.EnglishName)
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.EnglishName, new { @readonly = true })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Item.GermanName)
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.GermanName, new { @readonly = true })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Item.FrenchName)
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.FrenchName, new { @readonly = true })
                    </div>
                </div>
            </div>
            <div class="three fields">
                <div class="field">
                    @Html.LabelFor(m => m.Item.Accuracy)
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.Accuracy, new { @readonly = true })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Item.Strength)
                    <div class="ui transparent input">
                        @Html.TextBoxFor(m => m.Item.Strength, new { @readonly = true })
                    </div>
                </div>
                <div class="field">
                    @Html.LabelFor(m => m.Item.Type)
                    <div class="ui transparent input">
                        <input type="text" value="@Model.Item.Type.DisplayName()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>